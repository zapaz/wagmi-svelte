import { type ConfigParameter, type FuncOrVal, type QueryParameter, type RuneReturnType } from "../types";
import type { QueryObserverResult } from "@tanstack/svelte-query";
import { type Config, type PrepareTransactionRequestErrorType, type ResolvedRegister } from "@wagmi/core";
import type { PrepareTransactionRequestQueryFnData } from "@wagmi/core/query";
import { type PrepareTransactionRequestData, type PrepareTransactionRequestOptions, type PrepareTransactionRequestQueryKey } from "@wagmi/core/query";
import { type PrepareTransactionRequestParameterType as viem_PrepareTransactionRequestParameterType } from "viem";
export type CreatePrepareTransactionRequestParameters<parameterType extends viem_PrepareTransactionRequestParameterType = viem_PrepareTransactionRequestParameterType, config extends Config = Config, chainId extends config["chains"][number]["id"] | undefined = undefined, selectData = PrepareTransactionRequestData<parameterType, config, chainId>> = FuncOrVal<PrepareTransactionRequestOptions<parameterType, config, chainId> & ConfigParameter<config> & QueryParameter<PrepareTransactionRequestQueryFnData<parameterType, config, chainId>, PrepareTransactionRequestErrorType, selectData, PrepareTransactionRequestQueryKey<parameterType, config, chainId>>>;
export type CreatePrepareTransactionRequestReturnType<parameterType extends viem_PrepareTransactionRequestParameterType = viem_PrepareTransactionRequestParameterType, config extends Config = Config, chainId extends config["chains"][number]["id"] | undefined = undefined, selectData = PrepareTransactionRequestData<parameterType, config, chainId>> = RuneReturnType<QueryObserverResult<selectData, PrepareTransactionRequestErrorType>>;
export declare function createPrepareTransactionRequest<parameterType extends viem_PrepareTransactionRequestParameterType, config extends Config = ResolvedRegister["config"], chainId extends config["chains"][number]["id"] | undefined = undefined, selectData = PrepareTransactionRequestData<parameterType, config, chainId>>(parameters?: CreatePrepareTransactionRequestParameters<parameterType, config, chainId, selectData>): CreatePrepareTransactionRequestReturnType<parameterType, config, chainId, selectData>;
