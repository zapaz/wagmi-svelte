import { type ConfigParameter, type FuncOrVal, type QueryParameter, type RuneReturnType } from "../types";
import type { QueryObserverResult } from "@tanstack/svelte-query";
import { type Config, type ReadContractErrorType, type ResolvedRegister } from "@wagmi/core";
import { type UnionEvaluate } from "@wagmi/core/internal";
import { type ReadContractData, type ReadContractOptions, type ReadContractQueryFnData, type ReadContractQueryKey } from "@wagmi/core/query";
import { type Abi, type ContractFunctionArgs, type ContractFunctionName } from "viem";
export type CreateReadContractParameters<abi extends Abi | readonly unknown[] = Abi, functionName extends ContractFunctionName<abi, "pure" | "view"> = ContractFunctionName<abi, "pure" | "view">, args extends ContractFunctionArgs<abi, "pure" | "view", functionName> = ContractFunctionArgs<abi, "pure" | "view", functionName>, config extends Config = Config, selectData = ReadContractData<abi, functionName, args>> = FuncOrVal<UnionEvaluate<ReadContractOptions<abi, functionName, args, config> & ConfigParameter<config> & QueryParameter<ReadContractQueryFnData<abi, functionName, args>, ReadContractErrorType, selectData, ReadContractQueryKey<abi, functionName, args, config>>>>;
export type CreateReadContractReturnType<abi extends Abi | readonly unknown[] = Abi, functionName extends ContractFunctionName<abi, "pure" | "view"> = ContractFunctionName<abi, "pure" | "view">, args extends ContractFunctionArgs<abi, "pure" | "view", functionName> = ContractFunctionArgs<abi, "pure" | "view", functionName>, selectData = ReadContractData<abi, functionName, args>> = RuneReturnType<QueryObserverResult<selectData, ReadContractErrorType>>;
export declare function createReadContract<const abi extends Abi | readonly unknown[], functionName extends ContractFunctionName<abi, "pure" | "view">, args extends ContractFunctionArgs<abi, "pure" | "view", functionName>, config extends Config = ResolvedRegister["config"], selectData = ReadContractData<abi, functionName, args>>(parameters?: CreateReadContractParameters<abi, functionName, args, config, selectData>): CreateReadContractReturnType<abi, functionName, args, selectData>;
